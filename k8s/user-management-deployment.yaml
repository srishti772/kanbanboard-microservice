apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management-app
spec:
  selector:
    matchLabels:
      app: user-management-app
  template:
    metadata:
      labels:
        app: user-management-app
    spec:
      imagePullSecrets:
      - name: my-ecr-secret
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest # to run mysql client
          command: ['sh', '-c', 'until mysql -h $SQL_HOST -u $MYSQL_USERNAME -p$MYSQL_PASSWORD -e "SHOW DATABASES;"; do echo "Waiting for MySQL..."; sleep 5; done;']
          env:
            - name: SQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: sql_host
            - name: MYSQL_USERNAME
              value: "root"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: myapp-secrets
                  key: mysql_root_password

        - name: wait-for-services
          image: busybox
          command:
          - 'sh'
          - '-c'
          - |

            echo "Waiting for Zipkin..."
            until wget --spider $ZIPKIN_URL/zipkin/; do
              echo "waiting for Zipkin"
              sleep 5
            done
            echo "Zipkin is ready."

            echo "Waiting for Config Server..."
            until wget --spider $CONFIG_SERVER_URL/taskmanagement/default; do
              echo "waiting for Config Server"
              sleep 5
            done
            echo "Config Server is ready."

          env:
            - name: CONFIG_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: config_server_url
            - name: ZIPKIN_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: zipkin_url


      containers:
      - name: user-management-app
        image: ECR_REGISTRY/user-management:IMAGE_TAG
        imagePullPolicy: Always

        ports:
        - containerPort: 8080
        env:
        - name: CONFIG_SERVER_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: config_server_url
        - name: SQL_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: sql_host
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: myapp-secrets
              key: mysql_root_password
        - name: MYSQL_USERNAME
          value: "root"
        - name: ZIPKIN_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: zipkin_url 
        - name: TASK_SERVICE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: task_management_url                                          
---

apiVersion: v1
kind: Service
metadata:
  name: user-management-svc
spec:
  selector:
    app: user-management-app
  ports:
  - port: 80
    targetPort: 8080

